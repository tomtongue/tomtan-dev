---
import { getCollection } from 'astro:content';
import BaseView from '../layouts/BaseView.astro';
import GridView from '../components/GridView.astro';
import BlogEntries from '../components/BlogEntries.astro';

const posts = (await getCollection('blog'))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
---

<BaseView>
    <div class="home-container">
        <section class="hero">
            <div class="hero-content">
                <h1>Welcome to tomtan.dev</h1>
                <p class="hero-description">Enjoy your spare time for Coffee and BigData open source!</p>
            </div>
        </section>

        <section class="blog-section">
            <div class="content-container">
                <h2 class="section-title">Latest Posts</h2>
                <div class="posts-container">
                    <GridView>
                        {
                            posts.map((post) => (
                                !post.data.draft && (
                                    <BlogEntries post={post} />
                                )
                            ))
                        }
                    </GridView>
                </div>
            </div>
        </section>
    </div>
</BaseView>

<style>
:root {
    --max-content-width: 75rem;
    --content-padding: 2rem;
    --hero-bg: #f5f5f7;
    --text-primary: #1d1d1f;
    --text-secondary: #86868b;
    --section-spacing: 4rem;
}

.home-container {
    width: 100%;
    overflow-x: hidden;
}

.hero {
    background: linear-gradient(180deg, var(--hero-bg) 0%, #ffffff 100%);
    padding: 8rem var(--content-padding) 6rem;
    text-align: center;
    position: relative;
    margin-bottom: var(--section-spacing);
}

.hero::after {
    content: '';
    position: absolute;
    bottom: -3rem;
    left: 0;
    right: 0;
    height: 4rem;
    background: linear-gradient(180deg, rgba(245, 245, 247, 0.5) 0%, transparent 100%);
    transform: skewY(-3deg);
}

.hero-content {
    max-width: var(--max-content-width);
    margin: 0 auto;
    position: relative;
    z-index: 1;
}

.hero h1 {
    font-size: 3.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    line-height: 1.1;
    letter-spacing: -0.02em;
}

.hero-description {
    font-size: 1.5rem;
    color: var(--text-secondary);
    max-width: 40rem;
    margin: 0 auto;
    line-height: 1.4;
}

.blog-section {
    padding: 0 var(--content-padding) var(--section-spacing);
}

.content-container {
    max-width: var(--max-content-width);
    margin: 0 auto;
}

.section-title {
    font-size: 2.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 2.5rem;
    letter-spacing: -0.02em;
}

.posts-container {
    width: 100%;
}

@media (max-width: 1440px) {
    :root {
        --max-content-width: 65rem;
    }
}

@media (max-width: 1024px) {
    :root {
        --max-content-width: 55rem;
        --content-padding: 1.5rem;
    }

    .hero h1 {
        font-size: 3rem;
    }

    .hero-description {
        font-size: 1.25rem;
    }
}

@media (max-width: 768px) {
    :root {
        --content-padding: 1rem;
        --section-spacing: 3rem;
    }

    .hero {
        padding: 6rem var(--content-padding) 4rem;
    }

    .hero h1 {
        font-size: 2.5rem;
    }

    .section-title {
        font-size: 2rem;
        margin-bottom: 2rem;
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --hero-bg: #1d1d1f;
        --text-primary: #ffffff;
        --text-secondary: #a1a1a6;
    }

    .hero {
        background: linear-gradient(180deg, var(--hero-bg) 0%, #000000 100%);
    }

    .hero::after {
        background: linear-gradient(180deg, rgba(29, 29, 31, 0.5) 0%, transparent 100%);
    }
}

@media (prefers-reduced-motion: no-preference) {
    .hero-content {
        animation: fadeIn 1s ease-out;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
</style>